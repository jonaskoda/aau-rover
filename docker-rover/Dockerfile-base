# Use the latest version of Jetpack as base image
#FROM nvcr.io/nvidia/l4t-jetpack:r36.3.0
FROM nvidia/cuda:12.2.0-base-ubuntu22.04

# Avoid prompts with apt-get
ENV DEBIAN_FRONTEND=noninteractive

# Update apt-get and install necessary packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    libopenblas-dev \
    libopenmpi-dev \
    openmpi-bin \
    openmpi-common \
    gfortran \
    nano \
    libomp-dev && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install pip packages
RUN pip3 install --no-cache-dir setuptools Cython wheel numpy colcon-common-extensions

###################################
###       Install PyTorch       ###
###################################

# Use a wheel from Nvidia instead of building from source
# Check https://developer.download.nvidia.com/compute/redist/jp/v512/pytorch/ for more details
#ARG PYTORCH_URL=https://developer.download.nvidia.com/compute/redist/jp/v60/pytorch/#torch-2.4.0a0+f70bd71a48.nv24.06.15634931-cp310-cp310-linux_aarch64.whl
#ARG PYTORCH_WHL=torch-2.4.0a0+f70bd71a48.nv24.06.15634931-cp310-cp310-linux_aarch64.whl

RUN apt-get update; apt-get install wget

#RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate $#{PYTORCH_URL} -O ${PYTORCH_WHL}
#RUN pip3 install --no-cache-dir --verbose ${PYTORCH_WHL} && \
#    rm ${PYTORCH_WHL}

RUN pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

###################################
###     Install cuSPARSELt      ###
###################################

ARG cuSPARSELt_URL=https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/cuda-keyring_1.1-1_all.deb
ARG cuSPARSELt_DEB=cuda-keyring_1.1-1_all.deb

RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${cuSPARSELt_URL} -O ${cuSPARSELt_DEB} && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    rm ${cuSPARSELt_DEB} && \
    apt-get update && \
    apt-get -y install libcusparselt0 libcusparselt-dev

###################################
###         Install ROS         ###
###################################

# Update system locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

# Set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# 
RUN apt install software-properties-common -y && \
    add-apt-repository universe
    
# Add the ROS 2 GPG key with apt.
RUN apt update && apt install curl -y && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

# Add the repository to your sources list.
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list

RUN apt update && apt upgrade -y && \
    apt install ros-humble-desktop -y
